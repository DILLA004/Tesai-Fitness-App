generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  surname        String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  active         Boolean   @default(false)
  favoriteIds    String[]

  accounts Account[]
  plans    Plan[]
}

model VerificationToken {
  id      String   @id @default(cuid()) @map("_id")
  token   String   @unique
  email   String
  expires DateTime

  @@unique([email, token])
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  id_token          String  @db.String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model exercises {
  exerciseId       String   @id @default(auto()) @map("_id") @db.ObjectId
  bodyPart         String
  equipment        String
  gifUrl           String
  id               String
  name             String
  target           String
  createdAt        DateTime @default(now())
  secondaryMuscles String[]
  instructions     String[]
}

model Plan {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  imageSrc    String
  createdAt   DateTime @default(now())
  category    String
  muscules    String
  totalSets   Int      @default(10)
  totalReps   Int      @default(10)
  instruction String

  User   User?   @relation(fields: [userId], references: [id])
  userId String? @db.ObjectId
}
